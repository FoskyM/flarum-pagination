{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@lrysia/pagination/webpack/bootstrap","webpack://@lrysia/pagination/webpack/runtime/compat get default export","webpack://@lrysia/pagination/webpack/runtime/define property getters","webpack://@lrysia/pagination/webpack/runtime/hasOwnProperty shorthand","webpack://@lrysia/pagination/webpack/runtime/make namespace object","webpack://@lrysia/pagination/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@lrysia/pagination/external root \"flarum.core.compat['extend']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['components/DiscussionList']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['states/DiscussionListState']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['common/components/Placeholder']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['common/components/Button']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['forum/app']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['common/extend']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@lrysia/pagination/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@lrysia/pagination/./src/forum/determineMode.js","webpack://@lrysia/pagination/./src/forum/index.js","webpack://@lrysia/pagination/./src/forum/addUserPreference.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/DiscussionList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Placeholder'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/DiscussionComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","import app from 'flarum/forum/app';\n\n\nexport default function () {\n\n  if(app.session.user === null) {\n    return Boolean(app.forum.attribute('LrysiaPagination.PaginationFirst'));\n  }\n\n  if (Boolean(app.forum.attribute('LrysiaPagination.CanUserPref'))) {\n    if (!Boolean(app.session.user.preferences().DLP_UserCustom)) {\n      return Boolean(app.forum.attribute('LrysiaPagination.PaginationFirst'));\n    } else {\n      if (!Boolean(app.session.user.preferences().DLP_UserPaginationFirst)) {\n        return false;\n      }\n    }\n  } else {\n    return Boolean(app.forum.attribute('LrysiaPagination.PaginationFirst'));\n  }\n\n  return true;\n}\n\n","import {extend, override} from 'flarum/extend';\nimport DiscussionList from 'flarum/components/DiscussionList';\nimport DiscussionListState from 'flarum/states/DiscussionListState';\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\nimport Placeholder from 'flarum/common/components/Placeholder';\nimport Button from 'flarum/common/components/Button';\nimport Stream from 'flarum/common/utils/Stream';\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\n\nimport addUserPreference from \"./addUserPreference\";\nimport determineMode from \"./determineMode\";\n\n\napp.initializers.add('lrysia/pagination', () => {\n\n  // Add user preferences components\n  addUserPreference();\n\n  override(DiscussionListState.prototype, 'refresh', function (original) {\n\n    // params set by lrysia/pagination\n    this.options = {\n      perPage: Number(app.forum.attribute('LrysiaPagination.PerPage')),\n      perLoadMore: Number(app.forum.attribute('LrysiaPagination.PerLoadMore')),\n      perIndexInit: Number(app.forum.attribute('LrysiaPagination.PerIndexInit')),\n      leftEdges: 4,\n      rightEdges: 5,\n    };\n\n    // get the final loading mode\n    this.usePaginationMode = determineMode();\n\n    //\n    if (!this.usePaginationMode) {\n      this.pageSize = this.options.perLoadMore;\n      return original(arguments[1]);\n    }\n\n    this.initialLoading = true;\n    this.loadingPrev = false;\n    this.loadingNext = false;\n\n    // Modified by BlockCat\n    let page = arguments[1] || 1;\n\n    this.clear();\n\n    //\n    this.location = {page};\n\n    return this.loadPage(page)\n      .then((results) => {\n        this.pages = [];\n        this.parseResults(this.location.page, results);\n      })\n      .finally(() => (this.initialLoading = false));\n\n  });\n\n\n  override(DiscussionListState.prototype, 'loadPage', function (original) {\n\n    const page = arguments[1] === undefined ? 1 : arguments[1];\n    const reqParams = this.requestParams();\n\n    const include = Array.isArray(reqParams.include) ? reqParams.include.join(',') : reqParams.include;\n\n    let newOffset, newLimit;\n\n    if (this.usePaginationMode) {\n      newOffset = this.options.perPage * (page - 1);\n      newLimit = this.options.perPage;\n    }\n    else{\n      newOffset = this.options.perIndexInit * (Math.min((page - 1), 1))\n        + this.options.perLoadMore * (Math.max((page - 2), 0));\n      newLimit = (newOffset == 0) ? this.options.perIndexInit : this.options.perLoadMore;\n    }\n\n    const params = {\n      ...reqParams,\n      page: {\n        ...reqParams.page,\n        // request params(SQL-query) replaced by lrysia/pagination\n        offset: newOffset,\n        limit: newLimit\n      },\n      include,\n    };\n\n    return app.store.find(this.type, params);\n\n  });\n\n\n  override(DiscussionListState.prototype, 'parseResults', function (original) {\n\n    if (!this.usePaginationMode) {\n      return original(arguments[1], arguments[2]);\n    }\n\n    // get page number from arguments of\n    // parseResults(this, page, results)\n    const pageNum = Number(arguments[1]);\n\n    // get links from arguments of\n    // parseResults(this, page, results)\n    const links = arguments[2].payload?.links || {};\n\n    // create page by following structure\n    const page = {\n      number: pageNum,\n      items: arguments[2],\n      hasNext: !!links?.next,\n      hasPrev: !!links?.prev,\n    };\n\n    // declare a function to check if\n    // page already registred\n    this.hasPage = function (page) {\n      let allPages = this.getPages();\n      if (allPages.length == 0) return false;\n      for (let i = 0; i < allPages.length; i++) {\n        if (allPages[i].number == page) return true;\n      }\n      return false;\n    };\n\n    // if page doesn't registred yet,\n    // then page will added\n    if (!this.hasPage(pageNum)) {\n      this.pages.push(page);\n    }\n\n    // refresh current location\n    this.location = {page: pageNum};\n\n\n\n    // ATTENTION! THIS IS THE CORE OF lrysia/pagination(1.0.0)\n    // Total number of discussions matching this SQL-query\n    // (this interface is implemented by overriding the Flarum's backend source code)\n    this.totalDiscussionCount = Stream(arguments[2].payload.jsonapi.totalResultsCount);\n    // If you want to know more details,\n    // please look the PHP files in pagination/src and\n    // the 'autoload' module in pagination/composer.json\n\n\n\n    //\n    this.getTotalPages = function () {\n      return Math.ceil(this.totalDiscussionCount() / this.options.perPage)\n    };\n\n    //\n    this.page = Stream(page);\n    this.perPage = Stream(this.options.perPage);\n    this.totalPages = Stream(this.getTotalPages());\n\n    // functions for pagination\n    this.ctrl = {\n\n      prevPage: function () {\n        let current = this.page().number;\n        --current;\n\n        if (current < 1) {\n          return; // do not load if at the begin\n        }\n\n        this.page(current);\n        let next = current;\n        this.loadPage(next).then(this.parseResults.bind(this, next));\n      }.bind(this),\n\n      nextPage: function () {\n        let current = this.page().number;\n        ++current;\n\n        if (current > (this.totalPages())) {\n          current = (this.totalPages()); // do not load if at the end\n          return;\n        }\n\n        this.page(current);\n        let next = current;\n        this.loadPage(next).then(this.parseResults.bind(this, next));\n      }.bind(this),\n\n      toPage: function (page) {\n        if (this.page().number == Number(page) || page < 1 || page > this.totalPages()) return;\n\n        this.page(Number(page));\n        let next = Number(page);\n\n        this.loadPage(next).then(this.parseResults.bind(this, next));//.then(this.preLoadNextDiscussionPage(next + 1));\n      }.bind(this),\n\n      pageList: function () {\n        //\n        let p = [],\n          left = Math.max(parseInt(this.page().number) - this.options.leftEdges, 1),\n          right = Math.min(parseInt(this.page().number) + this.options.rightEdges, this.totalPages())\n\n        //\n        for (let i = left; i <= right; i++) {\n          p.push(i);\n        }\n\n        return p;\n      }.bind(this)\n\n    };\n\n    m.redraw();\n  });\n\n  extend(DiscussionList.prototype, 'view', function (view) {\n\n    // info about discussions\n    const state = this.attrs.state;\n\n    if (!state.usePaginationMode) {\n      return;\n    }\n\n    const params = state.getParams();\n\n    //\n    let DiscussionListView;\n\n    //\n    if (state.isEmpty()) {\n      const text = app.translator.trans('core.forum.discussion_list.empty_text');\n      DiscussionListView = (\n        Placeholder.component({text})\n      );\n      view.children = [];\n      view.children.push(DiscussionListView);\n      return;\n    }\n\n    //\n    if (!state.isLoading()) {\n\n      let dicussionsOnPage = [];\n      const pages = state.getPages();\n\n      //\n      for (let index = 0; index < pages.length; index++) {\n        const page = pages[index];\n        if (page.number == state.location.page) {\n          page.items.map((discussion) => {\n            dicussionsOnPage.push(\n              <li key={discussion.id()} data-id={discussion.id()}>\n                {DiscussionListItem.component({discussion, params})}\n              </li>\n            );\n          });\n          break;\n        }\n      }\n\n      //\n      DiscussionListView = (\n        <ul className=\"DiscussionList-discussions\">\n          {dicussionsOnPage.map((i) => i)}\n        </ul>\n      );\n\n      //\n      view.children = [];\n      view.children.push(DiscussionListView);\n\n\n      // define buttons\n      let buttonFirst = Button.component({\n        title: \"First\",\n        icon: 'fa fa-angle-double-left',\n        className: 'Button Button--icon',\n        onclick: () => {\n          state.ctrl.toPage(1);\n        }\n      });\n      let buttonBack = Button.component({\n        title: \"Back\",\n        icon: 'fa fa-angle-left',\n        className: 'Button Button--icon',\n        onclick: () => {\n          let page = state.page().number;\n          state.ctrl.toPage(parseInt(page) - 1);\n        }\n      });\n      let buttonNext = Button.component({\n        title: \"Next\",\n        icon: 'fa fa-angle-right',\n        className: 'Button Button--icon',\n        onclick: () => {\n          let page = state.page().number;\n          state.ctrl.toPage(parseInt(page) + 1);\n        }\n      });\n      let buttonLast = Button.component({\n        title: \"Last\",\n        icon: 'fa fa-angle-double-right',\n        className: 'Button Button--icon',\n        onclick: () => {\n          let page = parseInt(state.totalPages());\n          state.ctrl.toPage(parseInt(page));\n        }\n      });\n\n      //\n      function JumpFunc(){\n        let input = parseInt(document.getElementById('lrysia-inputJump').value);\n        // 跳转前检查页码合法性\n        if (Number.isFinite(input) && Number.isSafeInteger(input)) {\n          if (input != state.page().number) {\n            if (1 <= input && input <= state.totalPages()) {\n              state.ctrl.toPage(input);\n            }\n          }\n        }\n      }\n      let inputJump = m('input.FromControl', {\n        id: 'lrysia-inputJump',\n        placeholder: state.page().number === undefined ? '' : `${state.page().number}`,\n        onkeydown: (event) => {\n          event.redraw = false;\n          if(event.keyCode == 13){\n            event.redraw = true;\n            JumpFunc();\n          }\n        }\n      });\n      let buttonJump = Button.component({\n        title: \"Jump\",\n        icon: 'fas fa-paper-plane',\n        className: 'Button Button--icon',\n        onclick: JumpFunc\n      });\n\n      //\n      let buttonPage = [];\n      let buttons;\n      let toolbar;\n\n      //\n      state.ctrl.pageList().map(function (page) {\n        let me = this;\n        buttonPage.push(Button.component({\n          title: parseInt(page),\n          icon: '',\n          className: (page == me.page().number) ? 'Button Button--primary' : 'Button',\n          'data-page': page,\n          onclick: (page != me.page().number) ? () => {\n            me.ctrl.toPage(parseInt(page));\n          } : ''\n        }, m('strong', {className: ''}, parseInt(page))));\n      }, state);\n\n      //\n      buttons = [buttonFirst].concat(buttonBack, buttonPage, buttonNext, buttonLast,\n        inputJump, buttonJump);\n\n      //\n      toolbar = {\n        view: function (vnode) {\n          return m('div', {id: 'toolbar' + Math.floor((Math.random() * 10) + 1), className: 'Pagination'},\n            m('ul', {class: 'IndexPage-toolbar-view'}, vnode.attrs.groupbuttons.map((ibutton) => {\n              return m('li', {class: ''}, ibutton);\n            }))\n          );\n        }\n      }\n\n      //\n      app.forum.attribute('LrysiaPagination.NavBarPosition') == 'above' && !state.isLoading()\n        ? view.children.unshift(m(toolbar, {groupbuttons: buttons})) : '';\n      app.forum.attribute('LrysiaPagination.NavBarPosition') == 'under' && !state.isLoading()\n        ? view.children.push(m(toolbar, {groupbuttons: buttons})) : '';\n      app.forum.attribute('LrysiaPagination.NavBarPosition') == 'both' && !state.isLoading()\n        ? view.children.unshift(m(toolbar, {groupbuttons: buttons}))\n        && view.children.push(m(toolbar, {groupbuttons: buttons})) : '';\n\n    }\n\n  });\n\n  // clear\n  extend(DiscussionControls, 'deleteAction', function () {\n\n    if (!this.usePaginationMode) {\n      return;\n    }\n\n    if (app.discussions) {\n      let page = app.discussions.location.page;\n      app.discussions.refresh(page);\n    }\n\n  });\n\n  extend(DiscussionComposer.prototype, 'onsubmit', function () {\n\n    if (!this.usePaginationMode) {\n      return;\n    }\n\n    if (app.discussions) {\n      // let page = app.discussions.location.page;\n      app.discussions.refresh();\n    }\n\n  });\n\n\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Switch from 'flarum/common/components/Switch';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default function () {\n  extend(SettingsPage.prototype, 'oninit', function () {\n    this.DLP_UserCustom = Stream(this.user.preferences().DLP_UserCustom);\n    this.DLP_UserPaginationFirst = Stream(this.user.preferences().DLP_UserPaginationFirst);\n  });\n\n  extend(SettingsPage.prototype, 'settingsItems', function (items) {\n    if (Boolean(app.forum.attribute('LrysiaPagination.CanUserPref'))) {\n      items.add(\n        'Lrysia_DLP_User',\n        FieldSet.component(\n          {\n            label: app.translator.trans('Lrysia-DLP.forum.user.settings.Head'),\n            className: 'Lrysia_DLP_PrefSettings',\n          },\n          this.Lrysia_DLP_UserPrefItems().toArray()\n        )\n      );\n    }\n  });\n\n  SettingsPage.prototype['Lrysia_DLP_UserPrefItems'] = function () {\n    const items = new ItemList();\n    items.add(\n      'Lrysia_DLP_UserCustom',\n      Switch.component(\n        {\n          state: this.user.preferences().DLP_UserCustom,\n          onchange: (value) => {\n            this.UserCustomLoading = true;\n            this.user.savePreferences({ DLP_UserCustom: value }).then(() => {\n              this.UserCustomLoading = false;\n              m.redraw();\n            });\n          },\n          loading: this.UserCustomLoading,\n        },\n        app.translator.trans('Lrysia-DLP.forum.user.settings.DLP_UserCustom')\n      )\n    );\n\n    if (this.user.preferences().DLP_UserCustom) {\n      items.add(\n        'Lrysia_DLP_UserPaginationFirst',\n        Switch.component(\n          {\n            state: this.user.preferences().DLP_UserPaginationFirst,\n            onchange: (value) => {\n              this.UserPaginationFirstLoading = true;\n              this.user.savePreferences({ DLP_UserPaginationFirst: value }).then(() => {\n                this.UserPaginationFirstLoading = false;\n                m.redraw();\n              });\n            },\n            loading: this.UserPaginationFirstLoading,\n          },\n          app.translator.trans('Lrysia-DLP.forum.user.settings.DLP_UserPaginationFirst')\n        )\n      );\n    }\n\n    return items;\n  };\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_extends","assign","bind","target","i","arguments","length","source","apply","this","flarum","core","compat","app","Boolean","DLP_UserCustom","DLP_UserPaginationFirst","initializers","add","extend","SettingsPage","Stream","user","preferences","items","FieldSet","label","className","Lrysia_DLP_UserPrefItems","toArray","ItemList","Switch","state","onchange","UserCustomLoading","savePreferences","then","m","redraw","loading","UserPaginationFirstLoading","override","DiscussionListState","original","options","perPage","Number","forum","attribute","perLoadMore","perIndexInit","leftEdges","rightEdges","usePaginationMode","determineMode","pageSize","initialLoading","loadingPrev","loadingNext","page","clear","location","loadPage","results","pages","parseResults","newOffset","newLimit","undefined","reqParams","requestParams","include","Array","isArray","join","Math","min","max","params","offset","limit","store","find","type","pageNum","links","payload","number","hasNext","next","hasPrev","prev","hasPage","allPages","getPages","push","totalDiscussionCount","jsonapi","totalResultsCount","getTotalPages","ceil","totalPages","ctrl","prevPage","current","nextPage","toPage","pageList","p","left","parseInt","right","DiscussionList","view","attrs","DiscussionListView","getParams","isEmpty","text","translator","trans","Placeholder","children","isLoading","JumpFunc","input","document","getElementById","isFinite","isSafeInteger","dicussionsOnPage","index","map","discussion","id","DiscussionListItem","buttons","toolbar","buttonFirst","Button","title","icon","onclick","buttonBack","buttonNext","buttonLast","inputJump","placeholder","onkeydown","event","keyCode","buttonJump","buttonPage","me","concat","vnode","floor","random","class","groupbuttons","ibutton","unshift","DiscussionControls","discussions","refresh","DiscussionComposer"],"sourceRoot":""}