{"version":3,"sources":["webpack://@block-cat/pagination/webpack/bootstrap","webpack://@block-cat/pagination/external \"flarum.core.compat['extend']\"","webpack://@block-cat/pagination/external \"flarum.core.compat['common/components/Button']\"","webpack://@block-cat/pagination/external \"flarum.core.compat['common/utils/Stream']\"","webpack://@block-cat/pagination/external \"flarum.core.compat['states/DiscussionListState']\"","webpack://@block-cat/pagination/external \"flarum.core.compat['components/DiscussionList']\"","webpack://@block-cat/pagination/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@block-cat/pagination/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@block-cat/pagination/external \"flarum.core.compat['common/components/Placeholder']\"","webpack://@block-cat/pagination/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@block-cat/pagination/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@block-cat/pagination/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","app","initializers","add","override","DiscussionListState","original","pageNum","Number","arguments","links","payload","page","number","items","hasNext","next","hasPrev","prev","this","hasPage","allPages","getPages","length","pages","push","location","redraw","initialLoading","loadingPrev","loadingNext","totalDiscussionCount","Stream","data","statistics","total","options","perPage","forum","attribute","limit","edges","ellipsis","getTotalPages","Math","ceil","totalPages","ctrl","prevPage","current","loadPage","then","parseResults","nextPage","toPage","pageList","params","requestParams","filter","disTagCount","totalPageForTag","tagSlug","q","split","store","all","slug","discussionCount","end","left","max","parseInt","right","min","changePerPage","clear","results","offset","Array","isArray","include","join","find","type","res","extend","DiscussionList","view","DiscussionListView","state","attrs","getParams","isEmpty","text","translator","trans","Placeholder","component","children","isLoading","className","LoadingIndicator","dicussionsOnPage","index","map","discussion","id","data-id","DiscussionListItem","buttons","toolbar","buttonFirst","Button","title","icon","onclick","buttonBack","buttonNext","buttonLast","buttonPage","me","style","concat","vnode","floor","random","class","groupbuttons","ibutton","unshift","DiscussionControls","discussions","refresh","DiscussionComposer"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,iBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAe,Q,cCA5CnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,+B,eCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,8B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,kC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,oMCWpCC,IAAIC,aAAaC,IAAI,wBAAwB,WACzCC,mBAASC,IAAoBX,UAAW,gBAAgB,SAAUY,GAAU,MAGlEC,EAAUC,OAAOC,UAAU,IAI3BC,GAAQ,SAAAD,UAAU,GAAGE,cAAb,IAAsBD,QAAS,GAEvCE,EAAO,CACTC,OAAQN,EACRO,MAAOL,UAAU,GACjBM,UAAWL,EAAMM,KACjBC,UAAWP,EAAMQ,MAKrBC,KAAKC,QAAU,SAAUR,GACrB,IAAIS,EAAWF,KAAKG,WAEpB,GAAuB,GAAnBD,EAASE,OAAa,OAAO,EAEjC,IAAK,IAAIzD,EAAI,EAAGA,EAAIuD,EAASE,OAAQzD,IACjC,GAAIuD,EAASvD,GAAG+C,QAAUD,EAAM,OAAO,EAG3C,OAAO,GAKNO,KAAKC,QAAQb,IACdY,KAAKK,MAAMC,KAAKb,GAIpBO,KAAKO,SAAW,CAAEd,KAAML,GAExBrC,EAAEyD,YAGNvB,mBAASC,IAAoBX,UAAW,WAAW,SAAUY,GAAU,WACnEa,KAAKS,gBAAiB,EACtBT,KAAKU,aAAc,EACnBV,KAAKW,aAAc,EAGnB,IAAIlB,EAAOH,UAAU,IAAM,EAwH/B,OAvHIU,KAAKY,qBAAuBC,IAAO/B,IAAIgC,KAAKC,WAAT,YAAmCC,OAEtEhB,KAAKiB,QAAU,CACXC,QAAS7B,OAAOP,IAAIqC,MAAMC,UAAU,6BACpCC,MAAO,GACPC,MAAO,EACPC,SAAU,SAGdvB,KAAKwB,cAAgB,WACjB,OAAOC,KAAKC,KAAK1B,KAAKY,uBAAyBZ,KAAKiB,QAAQC,UAEhElB,KAAKP,KAAOoB,IAAOpB,GACnBO,KAAKkB,QAAUL,IAAOb,KAAKiB,QAAQC,SACnClB,KAAK2B,WAAad,IAAOb,KAAKwB,iBAE9BxB,KAAK4B,KAAO,CACRC,SAAU,WACN,IAAIC,EAAU9B,KAAKP,OAInB,KAFEqC,EAEY,EACVA,EAAU,MADd,CAKA9B,KAAKP,KAAKqC,GACV,IAAIjC,EAAOiC,EACX9B,KAAK+B,SAASlC,GAAMmC,KAAKhC,KAAKiC,aAAa9D,KAAK6B,KAAMH,MACxD1B,KAAK6B,MAEPkC,SAAU,WACN,IAAIJ,EAAU9B,KAAKP,OAInB,KAFEqC,EAEa9B,KAAK2B,aAChBG,EAAW9B,KAAK2B,iBADpB,CAKA3B,KAAKP,KAAKqC,GACV,IAAIjC,EAAOiC,EACX9B,KAAK+B,SAASlC,GAAMmC,KAAKhC,KAAKiC,aAAa9D,KAAK6B,KAAMH,MACxD1B,KAAK6B,MAEPmC,OAAQ,SAAU1C,GACd,KAAIO,KAAKP,QAAUJ,OAAOI,IAASA,EAAO,GAAKA,EAAOO,KAAK2B,cAA3D,CAEA3B,KAAKP,KAAKJ,OAAOI,IACjB,IAAII,EAAOR,OAAOI,GAClBO,KAAK+B,SAASlC,GAAMmC,KAAKhC,KAAKiC,aAAa9D,KAAK6B,KAAMH,MACxD1B,KAAK6B,MAEPoC,SAAU,WACN,IAAMC,EAASrC,KAAKsC,gBACpB,GAAI,MAAOD,EAAOE,OAAQ,CAItB,IAHA,IACIC,EACAC,EAFAC,EAAUL,EAAOE,OAAOI,EAAEC,MAAM,KAAK,GAGhCjG,EAAI,EAAGA,EAAImC,IAAI+D,MAAMC,IAAI,QAAQ1C,OAAQzD,IAC9C,GAAImC,IAAI+D,MAAMC,IAAI,QAAQnG,GAAGoG,SAAWL,EAAS,CAC7CF,EAAc1D,IAAI+D,MAAMC,IAAI,QAAQnG,GAAGqG,kBACvCP,EAAkBhB,KAAKC,KAAKc,EAAcxC,KAAKkB,WAC/C,MAIJuB,GACAzC,KAAK2B,WAAWc,QAGpBzC,KAAK2B,WAAW3B,KAAKwB,iBASzB,IANA,IAAI/C,EAAI,GAEJwE,EAAMjD,KAAK2B,aAAe,EAC1BuB,EAAOzB,KAAK0B,IAAIC,SAASpD,KAAKP,QAAUO,KAAKiB,QAAQK,MAAO,GAC5D+B,EAAQ5B,KAAK6B,IAAIF,SAASpD,KAAKP,QAAUO,KAAKiB,QAAQK,MAAOtB,KAAK2B,cAE7DhF,EALG,EAKQA,EAAIsG,EAAKtG,IAEf,IAANA,GACGA,IAAMyG,SAASpD,KAAK2B,cAAgB,GACpCyB,SAASpD,KAAK2B,cAAgB3B,KAAKiB,QAAQI,MAE9C5C,EAAE6B,KAAK3D,IAIHA,IAAO0G,EAAQ,GAAM1G,IAAOuG,EAAO,GAAIzE,EAAE6B,KAAKN,KAAKiB,QAAQM,UAE3D5E,GAAK0G,GAAS1G,GAAKuG,GAAMzE,EAAE6B,KAAK3D,IAI5C,OAAO8B,GACTN,KAAK6B,MAEPuD,cAAe,SAAU3F,GACrBoC,KAAKkB,QAAQtD,GAIboC,KAAK2B,WAAW3B,KAAKwB,iBAIrBxB,KAAKP,KAAK,IACZtB,KAAK6B,OAIfA,KAAKwD,QACL/D,EAAOO,KAAKP,OACZO,KAAKO,SAAW,CAAEd,QAEXO,KAAK+B,SAAStC,GAChBuC,MAAK,SAACyB,GACH,EAAKpD,MAAQ,GACb,EAAK4B,aAAa,EAAK1B,SAASd,KAAMgE,MAHvC,SAKM,kBAAO,EAAKhD,gBAAiB,QAG1CxB,mBAASC,IAAoBX,UAAW,YAAY,SAAUY,GAC1D,IAAIM,EAAOH,UAAU,IAAM,EAErB+C,EAASrC,KAAKsC,gBAQpB,OAPAD,EAAO5C,KAAO,CAAEiE,OAAQ1D,KAAKiB,QAAQC,SAAWzB,EAAO,IAEnDkE,MAAMC,QAAQvB,EAAOwB,WACrBxB,EAAOwB,QAAUxB,EAAOwB,QAAQC,KAAK,MAIlChF,IAAI+D,MAAMkB,KAAK/D,KAAKgE,KAAM3B,GAAQL,MAAK,SAACiC,GAC3C,OAAOA,QAIfC,iBAAOC,IAAe5F,UAAW,QAAQ,SAAU6F,GAC/C,GAA2D,QAAvDtF,IAAIqC,MAAMC,UAAU,gCAAxB,CAEA,IAKIiD,EALEC,EAAQtE,KAAKuE,MAAMD,MACnBjC,EAASiC,EAAME,YAMrB,GAAIF,EAAMG,UAAW,CACjB,IAAMC,EAAO5F,IAAI6F,WAAWC,MAAM,yCAMlC,OALAP,EACIQ,IAAYC,UAAU,CAAEJ,SAE5BN,EAAKW,SAAW,QAChBX,EAAKW,SAASzE,KAAK+D,GAInBC,EAAMU,YACNX,EACI,SAAKY,UAAU,2BACVC,IAAiBJ,aAGvB,WAIH,IAHA,IAAIK,EAAmB,GACjB9E,EAAQiE,EAAMnE,WAEXiF,EAAQ,EAAGA,EAAQ/E,EAAMD,OAAQgF,IAAS,CAC/C,IAAM3F,EAAOY,EAAM+E,GACnB,GAAI3F,EAAKC,QAAU4E,EAAM/D,SAASd,KAAM,CACpCA,EAAKE,MAAM0F,KAAI,SAACC,GACZH,EAAiB7E,KACb,QAAIpC,IAAKoH,EAAWC,KAAMC,UAASF,EAAWC,MACzCE,IAAmBX,UAAU,CAAEQ,aAAYjD,gBAIxD,OAIRgC,EACI,QAAIY,UAAU,8BACTE,EAAiBE,KAAI,SAAC1I,GAAD,OAAOA,MApBlC,GAyBPyH,EAAKW,SAAW,GAChBX,EAAKW,SAASzE,KAAK+D,GAKnB,IAqCIqB,EACAC,EAtCAC,EAAcC,IAAOf,UAAU,CAC/BgB,MAAO,QACPC,KAAM,0BACNd,UAAW,sBACXe,QAAS,WACL1B,EAAM1C,KAAKO,OAAO,MAGtB8D,EAAaJ,IAAOf,UAAU,CAC9BgB,MAAO,SACPC,KAAM,mBACNd,UAAW,sBACXe,QAAS,WACL,IAAIvG,EAAO6E,EAAM7E,OACjB6E,EAAM1C,KAAKO,OAAOiB,SAAS3D,GAAQ,MAGvCyG,EAAaL,IAAOf,UAAU,CAC9BgB,MAAO,aACPC,KAAM,oBACNd,UAAW,sBACXe,QAAS,WACL,IAAIvG,EAAO6E,EAAM7E,OACjB6E,EAAM1C,KAAKO,OAAOiB,SAAS3D,GAAQ,MAGvC0G,EAAaN,IAAOf,UAAU,CAC9BgB,MAAO,SACPC,KAAM,2BACNd,UAAW,sBACXe,QAAS,WACL,IAAIvG,EAAO2D,SAASkB,EAAM3C,cAC1B2C,EAAM1C,KAAKO,OAAOiB,SAAS3D,OAI/B2G,EAAa,GAOjB9B,EAAM1C,KAAKQ,WAAWiD,KAAI,SAAU5F,GAChC,IAAI4G,EAAKrG,KACT,OAAQP,GACJ,KAAK4G,EAAGpF,QAAQM,SACZ6E,EAAW9F,KAAKuF,IAAOf,UAAU,CAC7BgB,MAAO,MACPC,KAAM,GACNd,UAAW,SACX,YAAa,MACbqB,MAAO,mBACRvJ,EAAE,SAAU,CAAEkI,UAAW,IAAM,SAClC,MACJ,QACImB,EAAW9F,KAAKuF,IAAOf,UAAU,CAC7BgB,MAAO1C,SAAS3D,GAChBsG,KAAM,GACNd,UAAYxF,GAAQ4G,EAAG5G,OAAU,yBAA2B,SAC5D,YAAaA,EACbuG,QAAUvG,GAAQ4G,EAAG5G,OAAU,WAC3B4G,EAAGzE,KAAKO,OAAOiB,SAAS3D,KACxB,IACL1C,EAAE,SAAU,CAAEkI,UAAW,IAAM7B,SAAS3D,SAGpD6E,GAEHoB,EAAU,CAACE,GAAaW,OAAON,EAAYG,EAAYF,EAAYC,GAEnER,EAAU,CACNvB,KAAM,SAAUoC,GACZ,OAAOzJ,EAAE,MAAO,CAAEwI,GAAI,UAAY9D,KAAKgF,MAAuB,GAAhBhF,KAAKiF,SAAiB,GAAIzB,UAAW,cAC/ElI,EAAE,KAAM,CAAE4J,MAAO,0BAA4BH,EAAMjC,MAAMqC,aAAavB,KAAI,SAACwB,GACvE,OAAO9J,EAAE,KAAM,CAAE4J,MAAO,IAAME,UAMS,SAAvD/H,IAAIqC,MAAMC,UAAU,kCAA+CkD,EAAMU,aACnEZ,EAAKW,SAAS+B,QAAQ/J,EAAE4I,EAAS,CAAEiB,aAAclB,KAEA,SAAvD5G,IAAIqC,MAAMC,UAAU,kCAA+CkD,EAAMU,aACnEZ,EAAKW,SAASzE,KAAKvD,EAAE4I,EAAS,CAAEiB,aAAclB,KAEG,QAAvD5G,IAAIqC,MAAMC,UAAU,kCAA8CkD,EAAMU,cAClEZ,EAAKW,SAAS+B,QAAQ/J,EAAE4I,EAAS,CAAEiB,aAAclB,MAC5CtB,EAAKW,SAASzE,KAAKvD,EAAE4I,EAAS,CAAEiB,aAAclB,UAgD7DxB,iBAAO6C,IAAoB,gBAAgB,WACvC,GAAIjI,IAAIkI,YAAa,CACjB,IAAIvH,EAAOX,IAAIkI,YAAYzG,SAASd,KACpCX,IAAIkI,YAAYC,QAAQxH,OAIhCyE,iBAAOgD,IAAmB3I,UAAW,YAAY,WACzCO,IAAIkI,aAEJlI,IAAIkI,YAAYC","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['states/DiscussionListState'];","module.exports = flarum.core.compat['components/DiscussionList'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/components/Placeholder'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","import { extend, override } from 'flarum/extend';\r\nimport DiscussionList from 'flarum/components/DiscussionList';\r\nimport DiscussionListState from 'flarum/states/DiscussionListState';\r\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Placeholder from 'flarum/common/components/Placeholder';\r\nimport Button from 'flarum/common/components/Button';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\r\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\r\n\r\napp.initializers.add('block-cat/pagination', () => {\r\n    override(DiscussionListState.prototype, 'parseResults', function (original) {\r\n        // get page number from arguments of\r\n        // parseResults(this, page, results)\r\n        const pageNum = Number(arguments[1]);\r\n        \r\n        // get links from arguments of\r\n        // parseResults(this, page, results)\r\n        const links = arguments[2].payload?.links || {};\r\n        // create page by following structure\r\n        const page = {\r\n            number: pageNum,\r\n            items: arguments[2],\r\n            hasNext: !!links.next,\r\n            hasPrev: !!links.prev,\r\n        };\r\n\r\n        // declare a function to check if\r\n        // page already registred\r\n        this.hasPage = function (page) {\r\n            let allPages = this.getPages();\r\n\r\n            if (allPages.length == 0) return false;\r\n\r\n            for (let i = 0; i < allPages.length; i ++) {\r\n                if (allPages[i].number == page) return true;\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        // if page doesn't registred yet,\r\n        // then page will added\r\n        if (!this.hasPage(pageNum)) {\r\n            this.pages.push(page);\r\n        }\r\n\r\n        // refresh current location\r\n        this.location = { page: pageNum };\r\n\r\n        m.redraw();\r\n    });\r\n\r\n    override(DiscussionListState.prototype, 'refresh', function (original) {\r\n        this.initialLoading = true;\r\n        this.loadingPrev = false;\r\n        this.loadingNext = false;\r\n\r\n        // Modified by BlockCat\r\n        let page = arguments[1] || 1;\r\n        this.totalDiscussionCount = Stream(app.data.statistics['discussions'].total);\r\n\r\n        this.options = {\r\n            perPage: Number(app.forum.attribute('block-cat.articlePerPage')),\r\n            limit: 10,\r\n            edges: 2,\r\n            ellipsis: 'ellip',\r\n        };\r\n\r\n        this.getTotalPages = function () {\r\n            return Math.ceil(this.totalDiscussionCount() / this.options.perPage)\r\n        };\r\n        this.page = Stream(page);\r\n        this.perPage = Stream(this.options.perPage);\r\n        this.totalPages = Stream(this.getTotalPages());\r\n\r\n        this.ctrl = {\r\n            prevPage: function () {\r\n                let current = this.page();\r\n\r\n                --current;\r\n\r\n                if (current < 1) {\r\n                    current = 1;\r\n                    return; // do not load if at the begin\r\n                }\r\n\r\n                this.page(current);\r\n                let next = current;\r\n                this.loadPage(next).then(this.parseResults.bind(this, next));\r\n            }.bind(this),\r\n\r\n            nextPage: function () {\r\n                let current = this.page();\r\n\r\n                ++current;\r\n\r\n                if (current > (this.totalPages())) {\r\n                    current = (this.totalPages()); // do not load if at the end\r\n                    return;\r\n                }\r\n                debugger;\r\n                this.page(current);\r\n                let next = current;\r\n                this.loadPage(next).then(this.parseResults.bind(this, next));\r\n            }.bind(this),\r\n\r\n            toPage: function (page) {\r\n                if (this.page() == Number(page) || page < 1 || page > this.totalPages()) return;\r\n                //console.log(page);\r\n                this.page(Number(page));\r\n                let next = Number(page);\r\n                this.loadPage(next).then(this.parseResults.bind(this, next));//.then(this.preLoadNextDiscussionPage(next + 1));\r\n            }.bind(this),\r\n\r\n            pageList: function () {\r\n                const params = this.requestParams();\r\n                if ('q' in params.filter) {\r\n                    let tagSlug = params.filter.q.split(':')[1];\r\n                    let disTagCount;\r\n                    let totalPageForTag;\r\n                    for (let i = 0; i < app.store.all('tags').length; i++) {\r\n                        if (app.store.all('tags')[i].slug() === tagSlug) {\r\n                            disTagCount = app.store.all('tags')[i].discussionCount();\r\n                            totalPageForTag = Math.ceil(disTagCount / this.perPage())\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (totalPageForTag) {\r\n                        this.totalPages(totalPageForTag);\r\n                    }\r\n                } else {\r\n                    this.totalPages(this.getTotalPages());\r\n                }\r\n\r\n                let p = [],\r\n                    start = 1,\r\n                    end = this.totalPages() + 1,\r\n                    left = Math.max(parseInt(this.page()) - this.options.edges, 1),\r\n                    right = Math.min(parseInt(this.page()) + this.options.edges, this.totalPages())\r\n\r\n                for (let i = start; i < end; i++) {\r\n\r\n                    if (i === 1\r\n                        || i === parseInt(this.totalPages()) - 1\r\n                        || parseInt(this.totalPages()) < this.options.limit) {\r\n\r\n                        p.push(i);\r\n\r\n                    } else {\r\n\r\n                        if (i === (right + 1) || i === (left - 1)) p.push(this.options.ellipsis);\r\n\r\n                        if (i <= right && i >= left) p.push(i);\r\n                    }\r\n                }\r\n\r\n                return p;\r\n            }.bind(this),\r\n\r\n            changePerPage: function (value) {\r\n                this.perPage(value);\r\n\r\n                /* Recalculate total pages */\r\n\r\n                this.totalPages(this.getTotalPages());\r\n\r\n                /* Jump to page 1 */\r\n\r\n                this.page(1);\r\n            }.bind(this)\r\n        };\r\n    \r\n\r\n    this.clear();\r\n    page = this.page();\r\n    this.location = { page };\r\n\r\n    return this.loadPage(page)\r\n        .then((results) => {\r\n            this.pages = [];\r\n            this.parseResults(this.location.page, results);\r\n        })\r\n        .finally(() => (this.initialLoading = false));\r\n    });\r\n\r\n    override(DiscussionListState.prototype, 'loadPage', function (original) {\r\n        let page = arguments[1] || 1;\r\n\r\n        const params = this.requestParams();\r\n        params.page = { offset: this.options.perPage * (page - 1) };\r\n\r\n        if (Array.isArray(params.include)) {\r\n            params.include = params.include.join(',');\r\n        }\r\n        \r\n        // modified `if` by BlockCat\r\n        return app.store.find(this.type, params).then((res) => {\r\n            return res;\r\n        });\r\n    });\r\n\r\n    extend(DiscussionList.prototype, 'view', function (view) {\r\n        if (app.forum.attribute('block-cat.paginationPosition') == 'none') return;\r\n        // info about discussions\r\n        const state = this.attrs.state;\r\n        const params = state.getParams();\r\n\r\n        // console.log(state);\r\n        // console.log(state.getPages());\r\n        let DiscussionListView;\r\n        \r\n        if (state.isEmpty()) {\r\n            const text = app.translator.trans('core.forum.discussion_list.empty_text');\r\n            DiscussionListView = (\r\n                Placeholder.component({ text })\r\n            );\r\n            view.children = [];\r\n            view.children.push(DiscussionListView);\r\n            return;\r\n        }\r\n\r\n        if (state.isLoading()) {\r\n            DiscussionListView = (\r\n                <div className=\"DiscussionList-loadMore\">\r\n                    {LoadingIndicator.component()}\r\n                </div>\r\n            );\r\n        } else {\r\n            let dicussionsOnPage = [];\r\n            const pages = state.getPages();\r\n\r\n            for (let index = 0; index < pages.length; index++) {\r\n                const page = pages[index];\r\n                if (page.number == state.location.page) {\r\n                    page.items.map((discussion) => {\r\n                        dicussionsOnPage.push(\r\n                            <li key={discussion.id()} data-id={discussion.id()}>\r\n                                {DiscussionListItem.component({ discussion, params })}\r\n                            </li>\r\n                        );\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        \r\n            DiscussionListView = (\r\n                <ul className=\"DiscussionList-discussions\">\r\n                    {dicussionsOnPage.map((i) => i)}\r\n                </ul>\r\n            );\r\n        }\r\n        // console.log(DiscussionListView);\r\n        view.children = [];\r\n        view.children.push(DiscussionListView);\r\n        // console.log(view);\r\n        // console.log(arguments);\r\n\r\n        // define buttons\r\n        let buttonFirst = Button.component({\r\n            title: \"Prima\",\r\n            icon: 'fa fa-angle-double-left',\r\n            className: 'Button Button--icon',\r\n            onclick: () => {\r\n                state.ctrl.toPage(1);\r\n            }\r\n        });\r\n        let buttonBack = Button.component({\r\n            title: \"Înapoi\",\r\n            icon: 'fa fa-angle-left',\r\n            className: 'Button Button--icon',\r\n            onclick: () => {\r\n                let page = state.page();\r\n                state.ctrl.toPage(parseInt(page) - 1);\r\n            }\r\n        });\r\n        let buttonNext = Button.component({\r\n            title: \"Următoarea\",\r\n            icon: 'fa fa-angle-right',\r\n            className: 'Button Button--icon',\r\n            onclick: () => {\r\n                let page = state.page();\r\n                state.ctrl.toPage(parseInt(page) + 1);\r\n            }\r\n        });\r\n        let buttonLast = Button.component({\r\n            title: \"Ultima\",\r\n            icon: 'fa fa-angle-double-right',\r\n            className: 'Button Button--icon',\r\n            onclick: () => {\r\n                let page = parseInt(state.totalPages());\r\n                state.ctrl.toPage(parseInt(page));\r\n            }\r\n        });\r\n\r\n        let buttonPage = [];\r\n        let buttons;\r\n        let toolbar;\r\n\r\n        // console.log(state.ctrl.pageList());\r\n        \r\n        // for normal desktop\r\n        state.ctrl.pageList().map(function (page) {\r\n            let me = this;\r\n            switch (page) {\r\n                case me.options.ellipsis:\r\n                    buttonPage.push(Button.component({\r\n                        title: '...',\r\n                        icon: '',\r\n                        className: 'Button',\r\n                        'data-page': '...',\r\n                        style: 'cursor:default;',\r\n                    }, m('strong', { className: '' }, '...')));\r\n                    break;\r\n                default:\r\n                    buttonPage.push(Button.component({\r\n                        title: parseInt(page),\r\n                        icon: '',\r\n                        className: (page == me.page()) ? 'Button Button--primary' : 'Button',\r\n                        'data-page': page,\r\n                        onclick: (page != me.page()) ? () => {\r\n                            me.ctrl.toPage(parseInt(page));\r\n                        } : '' /*  FIX BUG CLICK CURRENT PAGE LOAD FOREVER WHEN this.preLoadNextDiscussionPage(2,300); AT INIT */\r\n                    }, m('strong', { className: '' }, parseInt(page))));\r\n                    break;\r\n            }\r\n        }, state);\r\n    \r\n        buttons = [buttonFirst].concat(buttonBack, buttonPage, buttonNext, buttonLast);\r\n    \r\n        toolbar = {\r\n            view: function (vnode) {\r\n                return m('div', { id: 'toolbar' + Math.floor((Math.random() * 10) + 1), className: 'Pagination' },\r\n                    m('ul', { class: 'IndexPage-toolbar-view' }, vnode.attrs.groupbuttons.map((ibutton) => {\r\n                        return m('li', { class: '' }, ibutton);\r\n                    }))\r\n                );\r\n            }\r\n        }\r\n\r\n        app.forum.attribute('block-cat.paginationPosition') == 'above' && !state.isLoading()\r\n            ? view.children.unshift(m(toolbar, { groupbuttons: buttons })) : '';\r\n\r\n        app.forum.attribute('block-cat.paginationPosition') == 'under' && !state.isLoading()\r\n            ? view.children.push(m(toolbar, { groupbuttons: buttons })) : '';\r\n\r\n        app.forum.attribute('block-cat.paginationPosition') == 'both' && !state.isLoading()\r\n            ? view.children.unshift(m(toolbar, { groupbuttons: buttons }))\r\n                && view.children.push(m(toolbar, { groupbuttons: buttons })) : '';\r\n        // console.log(view.children);\r\n      \r\n    \r\n    //   let res = m('div', { className: 'Paginate' }, [\r\n    //       !mystate.isLoading() && mystate.totalPages() > 1 ? m(toolbar, { groupbuttons: buttons }) : '',\r\n    //       listItem,\r\n    //       //this.loading === false ? paginateControl : '',\r\n    //       !mystate.isLoading() && mystate.totalPages() > 1 && morethan10 ? m(toolbar, { groupbuttons: buttons }) : '',\r\n          \r\n    //   ]);\r\n    \r\n      // return res;\r\n\r\n        // unneed functionality yet\r\n\r\n        // adaptation for mobile device\r\n        // if (window.matchMedia('screen and (max-width: 768px)').matches || $('.DiscussionPage-list').length) { //mobile or page list showed on the left\r\n        //     //we need a new toolbar for mobile device\r\n        //     mystate.ctrl.pageList().map(function (page) {\r\n        //         let me = this;\r\n        //         switch (page) {\r\n        //             case me.options.ellipsis:\r\n        //                 break;\r\n        //             default:\r\n        //                 if (Math.abs(parseInt(page) - parseInt(me.page())) <= 1 || parseInt(page) === parseInt(me.totalPages()) - 1) { //only display previous or next page and the last page\r\n        //                     buttonPage.push(Button.component({\r\n        //                         title: parseInt(page),\r\n        //                         icon: '',\r\n        //                         className: (page == me.page()) ? 'Button Button--primary' : 'Button',\r\n        //                         'data-page': page,\r\n        \r\n        //                         onclick: (page !== me.page()) ? () => {\r\n        //                             me.ctrl.toPage(parseInt(page));\r\n        //                         } : '' /*  FIX BUG CLICK CURRENT PAGE LOAD FOREVER WHEN this.preLoadNextDiscussionPage(2,300); AT INIT */\r\n        //                     }, m('strong', { className: '' }, parseInt(page))));\r\n        //                 }\r\n        //                 break;\r\n        //         }\r\n        //     }, mystate);\r\n        \r\n        //     //buttons = [buttonBegin].concat(buttonBack,buttonPage,buttonNext,buttonEnd);\r\n        //     buttons = [buttonBegin].concat(buttonPage, buttonEnd);\r\n        \r\n        // } else {\r\n    });\r\n\r\n    // clear pagination\r\n    extend(DiscussionControls, 'deleteAction', function () {\r\n        if (app.discussions) {\r\n            let page = app.discussions.location.page;\r\n            app.discussions.refresh(page);\r\n        }\r\n    });\r\n\r\n    extend(DiscussionComposer.prototype, 'onsubmit', function () {\r\n        if (app.discussions) {\r\n            // let page = app.discussions.location.page;\r\n            app.discussions.refresh();\r\n        }\r\n    });\r\n});\r\n"],"sourceRoot":""}